<?php


namespace app\models\form;


use app\library\Utils\MemberUtil;
use app\models\Member;

class MemberForm extends Member
{

    /**
     * 确认身份证号
     * @var integer $confirm_identity_card
     */
    public $confirm_identity_card;

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        $parent = parent::rules(); // TODO: Change the autogenerated stub
        $parent[] = [['confirm_identity_card'], 'required'];
        $parent[] = ['confirm_identity_card', 'validateIdentityCard'];
        $parent[] = ['number', 'validateNumber'];
        return $parent;
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels() {
        $parent = parent::attributeLabels();
        $parent['confirm_identity_card'] = '确认身份证号';
        return $parent;
    }

    /**
     * 验证 身份证号是否唯一
     *
     * @param  $attribute
     * @param  $params
     */
    public function validateIdentityCard($attribute, $params) {
        if($this->hasErrors()){
            return;
        }

        if ($this->$attribute != $this->identity_card) {
            return $this->addError($attribute, '身份证号不一致');
        }

        // 检查该身份证号是否已经注册过
        $exists = Member::find()->where([ 'identity_card' => $this->$attribute ])->exists();
        if ($exists) {
            return $this->addError($attribute, '此身份证已注册过');
        }
    }

    /**
     * 验证 身份证号是否唯一
     *
     * @param  $attribute
     * @param  $params
     */
    public function validateNumber($attribute, $params) {
        // 检查该会员号是否已经注册过
        $exists = Member::find()->where([ 'number' => $this->$attribute ])->exists();
        if ($exists) {
            $exists = true;
            do {
                $strNumber = MemberUtil::generateRandomNumber();
                $exists = Member::find()->where([ 'number' => $strNumber ])->exists();
                !$exists ? $this->$attribute = $strNumber : null;
            } while ($exists == true);
        }
    }

}